{
	"tldrawFileFormatVersion": 1,
	"schema": {
		"schemaVersion": 2,
		"sequences": {
			"com.tldraw.store": 4,
			"com.tldraw.asset": 1,
			"com.tldraw.camera": 1,
			"com.tldraw.document": 2,
			"com.tldraw.instance": 25,
			"com.tldraw.instance_page_state": 5,
			"com.tldraw.page": 1,
			"com.tldraw.instance_presence": 6,
			"com.tldraw.pointer": 1,
			"com.tldraw.shape": 4,
			"com.tldraw.asset.bookmark": 2,
			"com.tldraw.asset.image": 5,
			"com.tldraw.asset.video": 5,
			"com.tldraw.shape.group": 0,
			"com.tldraw.shape.text": 2,
			"com.tldraw.shape.bookmark": 2,
			"com.tldraw.shape.draw": 2,
			"com.tldraw.shape.geo": 9,
			"com.tldraw.shape.note": 8,
			"com.tldraw.shape.line": 5,
			"com.tldraw.shape.frame": 0,
			"com.tldraw.shape.arrow": 5,
			"com.tldraw.shape.highlight": 1,
			"com.tldraw.shape.embed": 4,
			"com.tldraw.shape.image": 4,
			"com.tldraw.shape.video": 2,
			"com.tldraw.binding.arrow": 0
		}
	},
	"records": [
		{
			"gridSize": 10,
			"name": "",
			"meta": {},
			"id": "document:document",
			"typeName": "document"
		},
		{
			"meta": {},
			"id": "page:page",
			"name": "Page 1",
			"index": "a1",
			"typeName": "page"
		},
		{
			"id": "pointer:pointer",
			"typeName": "pointer",
			"x": 31.956826958589332,
			"y": 2217.275682395758,
			"lastActivityTimestamp": 1735646870326,
			"meta": {}
		},
		{
			"followingUserId": null,
			"opacityForNextShape": 1,
			"stylesForNextShape": {},
			"brush": null,
			"scribbles": [],
			"cursor": {
				"type": "default",
				"rotation": 0
			},
			"isFocusMode": false,
			"exportBackground": true,
			"isDebugMode": false,
			"isToolLocked": false,
			"screenBounds": {
				"x": 0,
				"y": 0,
				"w": 1271.2000732421875,
				"h": 710.4000244140625
			},
			"insets": [
				false,
				false,
				true,
				false
			],
			"zoomBrush": null,
			"isGridMode": false,
			"isPenMode": false,
			"chatMessage": "",
			"isChatting": false,
			"highlightedUserIds": [],
			"isFocused": true,
			"devicePixelRatio": 1.25,
			"isCoarsePointer": false,
			"isHoveringCanvas": true,
			"openMenus": [],
			"isChangingStyle": false,
			"isReadonly": false,
			"meta": {},
			"duplicateProps": null,
			"id": "instance:instance",
			"currentPageId": "page:page",
			"typeName": "instance"
		},
		{
			"editingShapeId": "shape:isJig7TOQGGHU7ahxP0pB",
			"croppingShapeId": null,
			"selectedShapeIds": [
				"shape:isJig7TOQGGHU7ahxP0pB"
			],
			"hoveredShapeId": "shape:isJig7TOQGGHU7ahxP0pB",
			"erasingShapeIds": [],
			"hintingShapeIds": [],
			"focusedGroupId": null,
			"meta": {},
			"id": "instance_page_state:page:page",
			"pageId": "page:page",
			"typeName": "instance_page_state"
		},
		{
			"x": 100.38339946802445,
			"y": -1484.7546162022982,
			"z": 0.8387472425971139,
			"meta": {},
			"id": "camera:page:page",
			"typeName": "camera"
		},
		{
			"x": 204.00003051757812,
			"y": 74.20000839233398,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:0O8Oo5dMaRHdYuqC_mi5o",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 253.72500610351562,
				"text": "CHALLENGES IN ML?",
				"font": "draw",
				"textAlign": "start",
				"autoSize": true,
				"scale": 3.419753019556445
			},
			"parentId": "page:page",
			"index": "a1",
			"typeName": "shape"
		},
		{
			"x": 47,
			"y": 386.1999931335449,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:XlhWx4hPKIY8ByL7aABBW",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 1040.800048828125,
				"text": "1. DATA COLLECTION FOR TRAINING\nGathering data has  been a significant hurdle when you work on creating a model.\nGenerally there are two ways to obtain data->\n\n        i. Using an API\n        ii. By web-scraping\n\n\n",
				"font": "draw",
				"textAlign": "start",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "a29eR",
			"typeName": "shape"
		},
		{
			"x": 43,
			"y": 626.200023651123,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:on7ZcyGLbvlMO_mIMFYfj",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 2624.875,
				"text": "2. Insufficient data/ Labelled data\nInput data that we have also might not be labelled, when you are doing a supervised or unsupervised learning, there needs to be labelled data  for the model to work on.\nlets say a hypothetical situation where there are 2 algos A1,A2(where A1>A2 in terms of performance) and models M1 (100rows of data) and M2(10^6 rows of data), which one do you think will perform better?\nTruth is the one with the higher numbers of labelled data performs better, despite it using a weaker algorithm.\nWhen sufficient data isn't available, choosing a better algorithm can be a game changer.\n\n",
				"font": "draw",
				"textAlign": "start",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "a3AKI",
			"typeName": "shape"
		},
		{
			"x": 42,
			"y": 888.7999992370605,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:Dy3KXpQnTSfWPWy1B0vDT",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 1374,
				"text": "3. Non-Representative Data\nWhen the input data you have isnt telling the whole story, there can be a bias in the model being generated.\nIt's commonly called as sampling noise.\nWhat happens when you use a data that is highly biased? It leads to bad performance.",
				"font": "draw",
				"textAlign": "start",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "a45Ck",
			"typeName": "shape"
		},
		{
			"x": 36.80000305175781,
			"y": 1129.0000114440918,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:gRxVBMkCwHS5_f-6LEu0Z",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 1033.5125732421875,
				"text": "4. Poor Quality Data\nWhen the data is not in the right format, and has to go through a lot of cleaning. ",
				"font": "draw",
				"textAlign": "start",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "a5A3a",
			"typeName": "shape"
		},
		{
			"x": 31.199996948242188,
			"y": 1266.5999870300293,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:vgoOPGBKubGJvjqqn-Asf",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 1400.4500732421875,
				"text": "5. Irrelevant Features\nThere is a famous saying that \"Garbage in, Garbage Out\". Sometimes that data has some really irrelevant rows.\n Adding features that are not relevant in the dataset, it only leads to trash in the model's output.\nYou'll have to engineer the feature out of the dataset.  \nIt is also called as feature engineering.\n",
				"font": "draw",
				"textAlign": "start",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "a64Pz",
			"typeName": "shape"
		},
		{
			"x": 29,
			"y": 1518.7999992370605,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:Ek3q8KFg4B3v8iYQGzVdl",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 1430.4500732421875,
				"text": "6. Overfitting\nThis happens when the model, tries to stick  to the data, and doesn't deviate from the input data characteriestics\nThis model doesn't \"learn\", it only works on the previous data. It definitely happens sometimes.",
				"font": "draw",
				"textAlign": "start",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "a72eZ",
			"typeName": "shape"
		},
		{
			"x": 29.199721007347875,
			"y": 1715.8407499117573,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:Tx7grI1iIElGJqlRn55Qu",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 1857.0999755859375,
				"text": "7. Underfitting\n\nThis is the opposite of overfitting, where the model doesn't deliver at all. It  doesn't have any regard to the training data or even the sample data.",
				"font": "draw",
				"textAlign": "start",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "a8BsY",
			"typeName": "shape"
		},
		{
			"x": 28.61851130214933,
			"y": 1914.934615136508,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:owiCHo0RmUIYMcvHswLCE",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 1341.9625244140625,
				"text": "8. Software integration\n\nAt the end, the main goal is to be integrated to the software.\nthis aspect can be a bit tricky, where the model has to accomodate the model into the software platforms.",
				"font": "draw",
				"textAlign": "start",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "a9AZu",
			"typeName": "shape"
		},
		{
			"x": 27.1878097900627,
			"y": 2111.4181443106327,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:QkhSR5xUAugm8hl9hsXOx",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 387.3625183105469,
				"text": "9. Offline learning/Deployment",
				"font": "draw",
				"textAlign": "start",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aAB6n",
			"typeName": "shape"
		},
		{
			"x": 31.956826958589332,
			"y": 2201.0756816328185,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:isJig7TOQGGHU7ahxP0pB",
			"type": "text",
			"props": {
				"color": "black",
				"size": "m",
				"w": 223.75,
				"text": "10. Costs involved.",
				"font": "draw",
				"textAlign": "start",
				"autoSize": true,
				"scale": 1
			},
			"parentId": "page:page",
			"index": "aBAUO",
			"typeName": "shape"
		}
	]
}